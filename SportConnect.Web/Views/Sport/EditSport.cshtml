@using SportConnect.Models
@model SportViewModel

<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">
<style>
    /* Ensure modal content does not overflow */
    .modal-body {
        overflow: hidden; /* Hide any overflow */
    }

    /* Make sure the image scales to fit the container */
    #cropImage {
        width: 100%;
        height: 100%;
        object-fit: cover; /* Ensures image will cover the container without leaving black bars */
    }

    /* Hide any overflow if the crop container goes out of bounds */
    #cropContainer {
        width: 100%;
        height: 100%;
        overflow: hidden; /* Prevents overflow of cropped image */
    }

    /* Modal footer for buttons */
    .modal-footer {
        display: flex;
        justify-content: space-between; /* Align buttons to opposite sides */
    }

    .cropper-drag-box {
        opacity: 50%;
    }

    .container main {
        min-height: 83vh;
        padding-bottom: 0px !important;
    }

    .container main.pb-3 {
        align-content: center;
        padding-bottom: 0px !important;
    }
</style>

<!-- Include Cropper.js -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>
<div class="container-fluid d-flex justify-content-center align-items-center">
    <div class="row justify-content-center w-100">
        <div class="col-12 col-md-8 col-lg-6">
            <form id="loginForm" method="post" class="p-3" enctype="multipart/form-data">
                <h2 class="text-center" style="font-size: 2rem;">Промени спорт</h2>
                <div asp-validation-summary="ModelOnly" class="text-danger mt-3" role="alert"></div>

                <!-- First Row: Name Input -->
                <div class="row mb-2">
                    <div class="col-12">
                        <div class="form-floating">
                            <input asp-for="@Model.Name" class="form-control" aria-required="true" placeholder="Име на спорта" style="font-size: 1em;" />
                            <label asp-for="@Model.Name" style="font-size: 1em;">Име на спорта</label>
                            <span asp-validation-for="@Model.Name" class="text-danger" style="font-size: 1em;"></span>
                        </div>
                    </div>
                </div>

                <!-- Second Row: Description Input -->
                <div class="row mb-2">
                    <div class="col-12">
                        <div class="form-floating">
                            <input asp-for="@Model.Description" class="form-control" aria-required="true" placeholder="Описание на спорта" style="font-size: 1em;" />
                            <label asp-for="@Model.Description" style="font-size: 1em;">Описание на спорта</label>
                            <span asp-validation-for="@Model.Description" class="text-danger" style="font-size: 1em;"></span>
                        </div>
                    </div>
                </div>
                <!-- Profile Image -->
                <div class="row mb-0">
                    <div class="col-12">
                        <div class="form-group d-flex align-items-center">
                            <label asp-for="@Model.ImageUrl" class="text-center form-label me-2 d-flex align-items-center mb-0" style="font-size: 1em;">Снимка</label>
                            <input type="file" name="file" class="form-control form-control-sm" accept="image/*" id="imageInput" />
                        </div>
                        <span asp-validation-for="@Model.ImageUrl" class="text-danger" style="font-size: 1em;"></span>
                        <div id="imagePreview" class="mt-2 mb-2">
                            <img id="previewImage" src="@Model.ImageUrl" alt="Preview" class="img-fluid" style="display: @(string.IsNullOrEmpty(Model.ImageUrl) ? "none" : "block");" />
                        </div>
                    </div>
                </div>

                <!-- Hidden input to store the image URL -->
                <input type="hidden" id="croppedImageData" asp-for="ImageUrl" />

                <!-- Buttons at the Bottom -->
                <div id="buttonContainer" class="d-flex justify-content-between pt-0" style="font-size: 1em;">
                    <a asp-action="AllSports" asp-controller="Sport" class="btn btn-secondary text-center">Назад</a>
                    <button type="submit" id="submitSport" class="btn btn-warning text-white text-white d-flex justify-content-center align-items-center text-center">Промени</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Structure -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-body text-center" style="width: 100%; height: 80vh; overflow: hidden;">
                <!-- Set fixed height here -->
                <div id="cropContainer" style="width: 100%; height: 100%; overflow: hidden;">
                    <img id="cropImage" src="#" alt="Preview" style="max-width: 100%; height: 100%; display: block;"> <!-- Ensure image fits within container -->
                </div>
            </div>
            <div class="modal-footer justify-content-between">
                <!-- Buttons are spaced using flexbox -->
                <button type="button" class="btn btn-secondary text-center" id="resetCropper">Начално състояние</button>
                <button type="button" class="btn btn-success text-center" id="confirmUpload">Готово</button>
            </div>
        </div>
    </div>
</div>
<script>
    let cropper;

    document.getElementById('imageInput').addEventListener('change', function (event) {
        const file = event.target.files[0];
        const cropImage = document.getElementById('cropImage');
        const modal = new bootstrap.Modal(document.getElementById('imageModal'));

        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                cropImage.src = e.target.result;
                modal.show();

                modal._element.addEventListener('shown.bs.modal', function () {
                    if (cropper) {
                        cropper.destroy();
                    }
                    cropper = new Cropper(cropImage, {
                        aspectRatio: 4 / 3,
                        viewMode: 1,
                        autoCropArea: 1,
                        responsive: true,
                        zoomable: false,
                        background: true,
                        minContainerHeight: 450, // Ensure the container height fits the defined height of modal-body
                    });
                });
            };
            reader.readAsDataURL(file);
        }
    });

    document.getElementById('loginForm').addEventListener('submit', function (event) {
        const profileImageInput = document.querySelector('input[name="file"]');
        const previewImage = document.getElementById('previewImage');

        // If the preview image exists, set its src value to the hidden input field
        if (previewImage.style.display === 'block') {
            document.getElementById('croppedImageData').value = previewImage.src;
        }
    });

    document.getElementById('confirmUpload').addEventListener('click', function () {
        const previewImage = document.getElementById('previewImage');
        const previewImager = document.getElementById('imagePreview');

        // Get cropped image as base64
        const croppedCanvas = cropper.getCroppedCanvas();
        const croppedDataUrl = croppedCanvas.toDataURL();

        // Set the cropped image preview
        previewImage.src = croppedDataUrl;
        previewImage.style.display = 'block';
        previewImager.classList.add('mb-2');
        previewImager.classList.add('w-100');
        previewImager.classList.add('justify-content-center');

        // Set the hidden input value (fix the ID issue here)
        document.getElementById('croppedImageData').value = croppedDataUrl;

        // Close the modal correctly
        const modalElement = document.getElementById('imageModal');
        const modalInstance = bootstrap.Modal.getInstance(modalElement);
        modalInstance.hide();
    });

    document.getElementById('resetCropper').addEventListener('click', function () {
        if (cropper) {
            cropper.reset();  // Reset cropper to original size
        }
    });

    // On form submit, set the ProfileImage input value to the cropped image URL
    document.getElementById('submitSport').addEventListener('submit', function (event) {
        const profileImageInput = document.querySelector('input[name="file"]');
        const previewImage = document.getElementById('previewImage');

        // If the preview image exists, set its src value to the ProfileImage input
        if (previewImage.style.display === 'block') {
            // Ensure the profile image input gets the cropped image URL as its value
            profileImageInput.value = previewImage.src;
        }
    });
</script> 