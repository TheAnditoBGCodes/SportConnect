@using SportConnect.Models
@using SportConnect.Utility
@model UserViewModel
@{
    var currUser = ViewBag.UserId;
}
<script>
    function toggleApprovalButtons(tournamentId, userId, approve) {
        // Get the participation buttons container for the specific tournament
        const participationButtons = document.getElementById('participationButtonsApprove-' + tournamentId);

        if (approve) {
            var url = `/Participation/ApproveParticipation?tournamentId=${tournamentId}&userId=${userId}&returnUrl=%2FParticipation%2FTournamentParticipations%2F${tournamentId}`;

            participationButtons.innerHTML =
                `<button class="btn btn-danger text-white w-100 btn-sm" id="disapproveBtn-${tournamentId}" onclick="confirmApproval(${tournamentId}, \'${userId}\', false)">
                                Не
                            </button>
                            <a href="${url}" class="btn btn-success text-white w-100 btn-sm" id="approveBtn-${tournamentId}">
                                Да
                                </a>`
                ;
        } else {
            var url = `/Participation/DeleteParticipation?tournamentId=${tournamentId}&userId=${userId}&returnUrl=%2FParticipation%2FTournamentParticipations%2F${tournamentId}`;

            participationButtons.innerHTML =
                `<a href="${url}" class="btn btn-success text-white w-100 btn-sm" id="approveBtn-${tournamentId}">
                                Да
                            </a>
                                    <button class="btn btn-danger text-white w-100 btn-sm" id="disapproveBtn-${tournamentId}" onclick="confirmApproval(${tournamentId}, \'${userId}\', false)">
                                Не
                                </button>`
                ;
        }
    }

    function confirmApproval(tournamentId, userId, approve) {
        // Get the participation buttons container for the specific tournament
        const participationButtons = document.getElementById('participationButtonsApprove-' + tournamentId);
        participationButtons.innerHTML =
            `<a class="btn btn-success text-white w-100 btn-sm" id="approveBtn-${tournamentId}" onclick="toggleApprovalButtons(${tournamentId}, \'${userId}\', true)">
                                                Одобри
                                            </a>
                                                    <a class="btn btn-danger text-white w-100 btn-sm" id="disapproveBtn-${tournamentId}" onclick="toggleApprovalButtons(${tournamentId},\'${userId}\', false)">
                                                Не одобри
                                                </a>`
            ;
    }
    
    // Function to replace the "Отказване" button with confirmation buttons
    function replaceWithConfirmation(tournamentId, userId, isApproved) {
        var participationButtons = document.getElementById("participationButtons-" + tournamentId); // Unique ID for each tournament

        var url = `/Participation/DeleteParticipation?tournamentId=${tournamentId}&userId=${userId}&returnUrl=%2FParticipation%2FTournamentParticipations%2F${tournamentId}`;

        // Replace the content of the participationButtons with Yes and No options
        participationButtons.innerHTML = `
                    <a href="${url}" class="btn btn-danger w-50 btn-sm">Да</a>
                        <a href="javascript:void(0);" class="btn btn-success w-50 btn-sm" onclick="restoreQuitButton(${tournamentId},\'${userId}\', ${isApproved})">Не</a>
                `;
    }

    // Function to replace the "Отказване" button with confirmation buttons
    function replaceWithConfirmationUser(tournamentId, userId, isApproved) {
        var participationButtons = document.getElementById("participationButtonsApprove-" + tournamentId); // Unique ID for each tournament

        var url = `/Participation/DeleteParticipation?tournamentId=${tournamentId}&userId=${userId}&returnUrl=%2FParticipation%2FTournamentParticipations%2F${tournamentId}`;

        // Replace the content of the participationButtons with Yes and No options
        participationButtons.innerHTML = `
                        <a href="${url}" class="btn btn-danger w-50 btn-sm">Да</a>
                                <a href="javascript:void(0);" class="btn btn-success w-50 btn-sm" onclick="restoreQuitButtonUser(${tournamentId},\'${userId}\', ${isApproved})">Не</a>
                    `;
    }
    
    // Function to restore the "Отказване" button and revert back to the original state
    function restoreQuitButton(tournamentId, userId, isApproved) {
        var participationButtons = document.getElementById("participationButtons-" + tournamentId); // Unique ID for each tournament

        // Restore the appropriate buttons based on the approval status
        if (isApproved) {
            participationButtons.innerHTML = `
                        <button class="btn btn-success text-white w-50 btn-sm" onmousedown="return false;" onkeydown="return false;">Одобрен</button>
                                    <a id="quitParticipation-${userId}" class="btn btn-danger w-50 btn-sm" onclick="replaceWithConfirmation(${tournamentId}, \'${userId}\', ${isApproved})">Отказване</a>
                    `;
        } else {
            participationButtons.innerHTML = `
                        <button class="btn btn-secondary text-white w-50 btn-sm" onmousedown="return false;" onkeydown="return false;">Неодобрен</button>
                                    <a id="quitParticipation-${userId}" class="btn btn-danger w-50 btn-sm" onclick="replaceWithConfirmation(${tournamentId}, \'${userId}\', ${isApproved})">Отказване</a>
                    `;
        }
    }

    // Function to restore the "Отказване" button and revert back to the original state
    function restoreQuitButtonUser(tournamentId, userId, isApproved) {
        var participationButtons = document.getElementById("participationButtonsApprove-" + tournamentId); // Unique ID for each tournament
        participationButtons.innerHTML = `
                                <button class="btn btn-success text-white w-50 btn-sm" onmousedown="return false;" onkeydown="return false;">Одобрен</button>
                                                <a id="quiterParticipation-${userId}" class="btn btn-danger w-50 btn-sm" onclick="replaceWithConfirmationUser(${tournamentId}, \'${userId}\', ${isApproved})">Отказване</a>
                            `;
    }
</script>

@{
    Tournament tournament = ViewBag.Tournament;
    var userId = ViewBag.UserId;
}

<style>
    /* Ensure modal content does not overflow */
    .modal-body {
        overflow: hidden; /* Hide any overflow */
    }

    .card-footer {
        background-color: #fff; /* Match the background of the card body */
        border-top: none; /* Remove the top border */
        padding: 0px 5px 5px 5px !important;
    }

    .sport-btn {
        flex: 1; /* Makes all buttons equal in size */
        max-width: 95px; /* Adjust width */
        font-size: 14px; /* Adjust font size */
    }

    .sport-btn-user {
        flex: 1; /* Makes all buttons equal in size */
        max-width: 100%; /* Adjust width */
        padding: 5px 8px; /* Thinner buttons */
        font-size: 14px; /* Adjust font size */
    }

    .btn-group {
        display: flex;
        justify-content: space-around; /* Ensures equal spacing */
        gap: 10px; /* Uniform spacing between buttons */
    }

    /* Hide any overflow if the crop container goes out of bounds */
    #cropContainer {
        width: 100%;
        height: 100%;
        overflow: hidden; /* Prevents overflow of cropped image */
    }

    /* Modal footer for buttons */
    .modal-footer {
        display: flex;
        justify-content: space-between; /* Align buttons to opposite sides */
    }

    .cropper-drag-box {
        opacity: 50%;
    }

    #previewImage {
        height: auto; /* Maintains aspect ratio */
        display: block; /* Makes sure the image is block-level, so it doesn't cause any inline formatting issues */
        margin: 0 auto; /* Centers the image horizontally */
    }

    .container main {
        min-height: 83vh;
        padding-bottom: 0px !important;
    }

        .container main.pb-3 {
            align-content: center;
            padding-bottom: 0px !important;
        }

    .btn-group.d-flex.justify-content-between {
        width: 100% !important;
    }

    .sticky-search {
        position: sticky;
        top: 60px; /* Adjust based on your header height */
        background-color: none;
        z-index: 999; /* Keep it above content */
        padding: 10px 0;
    }

    #sportItem {
        width: 100%;
        max-width: 390px; /* Adjusts the max size of cards */
        height: auto; /* Ensures content adapts dynamically */
        min-height: 414.3px;
    }

    .sport-img {
        aspect-ratio: 4 / 3;
        object-fit: cover;
        width: 100%;
    }

    .delete-header {
        padding-top: 10px; /* Adds space between the title and top */
    }
</style>

@if (Model.Users.Count < 1)
{
    <div class="container-fluid d-flex justify-content-center align-items-center" style="height: 78vh;">
        <div class="container p-2" style="max-width: 60%; padding: 0.5rem;">
            <h1 class="text-center mb-3" style="font-size: 5rem;">Няма участници</h1>
            <div class="d-flex justify-content-center mt-3">
                <a href="@ViewBag.ReturnUrl" class="btn btn-secondary text-center" style="font-size: 1rem;">Назад</a>
                @if (tournament.Deadline.AddSeconds(-tournament.Deadline.Second).AddMilliseconds(-tournament.Deadline.Millisecond).AddMicroseconds(-tournament.Deadline.Microsecond) >= DateTime.Now.AddSeconds(-DateTime.Now.Second).AddMilliseconds(-DateTime.Now.Millisecond).AddMicroseconds(-DateTime.Now.Microsecond))
                {
                    <a asp-controller="Participation" asp-action="AddParticipation" asp-route-id="@tournament.Id" asp-route-returnUrl="@Url.Action("TournamentParticipations", "Participation")" class="btn btn-success text-center ms-2">
                        Участвай
                    </a>
                }
            </div>
        </div>
    </div>
}
else
{
    <div class="d-flex flex-column justify-content-center align-items-center" style="min-height: 83vh;">
        <div class="container">
            <h2 class="delete-header mb-0 text-center">Участници</h2>

            <form method="post" class="d-flex flex-column w-100 align-items-center mt-2 mb-2">
                <div class="row w-100 justify-content-center">
                    <div id="filter" class="col-auto d-flex flex-wrap justify-content-center">
                        <input id="sportSearch" class="form-control me-2" placeholder="Име" asp-for="@Model.UserName" style="font-size: 1rem; width: 200px;" />

                        <input id="sportSearch" class="form-control me-2" placeholder="Имейл / Телефон" asp-for="@Model.Email" style="font-size: 1rem; width: 200px;" />

                        <!-- Country Dropdown with same width as input -->
                        <select asp-for="@Model.Country" asp-items="@ViewBag.Countries" class="form-select form-control-sm me-2" aria-required="true" style="font-size: 1rem; width: 300px;">
                            <option value="" selected>Изберете държавa</option>
                        </select>

                        <!-- Birth Year Dropdown with same width as input -->
                        <select asp-for="BirthYear" class="form-select form-control-sm me-2" aria-required="true" style="font-size: 1rem; width: 300px;">
                            <option value="" selected>Изберете година на раждане</option>
                            @{
                                var currentYear = DateTime.Now.Year;
                                var startYear = currentYear - 120;
                                var endYear = currentYear - 13;

                                for (int year = startYear; year <= endYear; year++)
                                {
                                    <option value="@year">@year</option>
                                }
                            }
                        </select>

                        <select asp-for="@Model.Approved" class="form-select form-control-sm me-2" aria-required="true" style="font-size: 1rem; width: 180px;">
                            <option value="">Всички</option>
                            <option value="true">Одобрен</option>
                            <option value="false">Неодобрен</option>
                        </select>
                    </div>
                </div>

                <div class="row w-100 justify-content-center mt-1 mb-2">
                    <div id="button" class="col-auto d-flex justify-content-center">
                        <a href="@ViewBag.ReturnUrl" class="btn btn-secondary" style="font-size: 1rem;">Назад</a>
                        <!-- Submit Button -->
                        <button type="submit" class="btn btn-primary ms-2" style="font-size: 1rem;">Търси</button>
                        @if (tournament.Deadline.AddSeconds(-tournament.Deadline.Second).AddMilliseconds(-tournament.Deadline.Millisecond).AddMicroseconds(-tournament.Deadline.Microsecond) >= DateTime.Now.AddSeconds(-DateTime.Now.Second).AddMilliseconds(-DateTime.Now.Millisecond).AddMicroseconds(-DateTime.Now.Microsecond))
                        {
                            <div id="participationButtons-@tournament.Id" class="d-flex justify-content-between align-items-center text-center ms-2" style="width: 200px; height: 37.6px !important;">
                                @{
                                    var participation = tournament.Participations?.FirstOrDefault(p => p.ParticipantId == ViewBag.UserId);
                                }

                                @if (participation == null)
                                {
                                    <!-- User has not participated -->
                                    <a asp-controller="Participation" asp-action="AddParticipation" asp-route-id="@Model.Id" asp-route-returnUrl="@Url.Action("TournamentDetails", "Tournament")" class="btn btn-success btn-sm w-100 h-100" style="font-size: 1rem; text-align: center !important;">
                                        Участвай
                                    </a>
                                }
                                else if (participation.Approved == false)
                                {
                                    <button class="btn btn-secondary text-white btn-sm w-50 h-100" style="font-size: 1rem; text-align: center !important;" onmousedown="return false;" onkeydown="return false;">Неодобрен</button>
                                    <a id="quitParticipation-@tournament.Id" class="btn btn-danger w-50 h-100 btn-sm" style="font-size: 1rem; text-align: center !important;" onclick="replaceWithConfirmation(@tournament.Id, '@currUser', false)">Отказване</a>
                                }
                                else
                                {
                                    <button class="btn btn-success text-white btn-sm w-50 h-100" style="font-size: 1rem; text-align: center !important;" onmousedown="return false;" onkeydown="return false;">Одобрен</button>
                                    <a id="quitParticipation-@tournament.Id" class="btn btn-danger w-50 h-100 btn-sm" style="font-size: 1rem; text-align: center !important;" onclick="replaceWithConfirmation(@tournament.Id, '@currUser', true)">Отказване</a>
                                }
                            </div>
                        }
                    </div>
                </div>
            </form>

            <div class="row justify-content-center">
                @foreach (var user in Model.FilteredUsers)
                {
                    <div class="list-group-item d-flex flex-column align-items-center justify-content-between py-2 px-2 mb-1 border rounded">
                        <!-- User Info (Profile Image & Details) -->
                        <div class="d-flex align-items-center justify-content-between w-100">
                            <div class="d-flex flex-grow-1 justify-content-between text-center">
                                <div class="d-flex align-items-center flex-shrink-0" style="min-width: 200px;">
                                    <img src="@user.ImageUrl" alt="Профилна снимка"
                                         class="me-3"
                                         style="width: 50px; height: 50px; object-fit: cover;">
                                    <div class="px-2">
                                        <strong class="mb-0">@user.FullName</strong>
                                        <small class="d-block"><i class="bi bi-telephone"></i> @user.UserName</small>
                                    </div>
                                </div>
                                <div class="px-3">
                                    <strong>Държава</strong>
                                    <small class="d-block"><i class="bi bi-geo-alt"></i> @user.Country</small>
                                </div>
                                <div class="px-3">
                                    <strong>Имейл</strong>
                                    <small class="d-block"><i class="bi bi-envelope"></i> @user.Email</small>
                                </div>
                                @{
                                    int age = DateTime.Now.Year - user.DateOfBirth.Year;
                                    if (DateTime.Now.Month < user.DateOfBirth.Month ||
                                    (DateTime.Now.Month == user.DateOfBirth.Month && DateTime.Now.Day < user.DateOfBirth.Day))
                                    {
                                        age--;
                                    }
                                }
                                <div class="px-3">
                                    <strong>Дата на раждане (години)</strong>
                                    <small class="d-block">
                                        <i class="bi bi-calendar"></i> @user.DateOfBirth.ToString("dd.MM.yyyy") (@age години)
                                    </small>
                                </div>
                            </div>
                        </div><!-- Action Buttons Below User Data -->
                        <div class="d-flex justify-content-between w-100 mt-2" style="gap: 800px;">
                            <a asp-controller="Participation" asp-action="UserParticipations" asp-route-id="@user.Id" asp-route-tournamentId="@Model.TournamentId" asp-route-tournamentUrl="/Participation/TournamentParticipations/@Model.TournamentId" class="btn btn-primary btn-sm flex-fill mx-1">Участия</a>

                            @if (User.IsInRole(SD.AdminRole))
                            {
                                var userParticipation = tournament.Participations?.FirstOrDefault(p => p.ParticipantId == user.Id);

                                if (userParticipation != null)
                                {
                                    if (!userParticipation.Approved)
                                    {
                                        <div class="d-flex flex-fill">
                                            <a class="btn btn-success text-white btn-sm flex-fill" id="approveBtn-@tournament.Id" onclick="toggleApprovalButtons(@tournament.Id, '@userId', true)">Одобри</a>
                                            <a class="btn btn-danger text-white btn-sm flex-fill" id="disapproveBtn-@tournament.Id" onclick="toggleApprovalButtons(@tournament.Id, '@userId', false)">Не одобри</a>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="d-flex flex-fill">
                                            <button class="btn btn-success text-white btn-sm flex-fill" onmousedown="return false;" onkeydown="return false;">Одобрен</button>
                                            <a id="quiterParticipation-@user.Id" class="btn btn-danger btn-sm flex-fill" onclick="replaceWithConfirmationUser(@tournament.Id, '@user.Id', true)">Отказване</a>
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}