@using SportConnect.Models
@using SportConnect.Utility
@model UserViewModel
@{
    var currUser = ViewBag.UserId;
    Tournament tournament = ViewBag.Tournament;
}
<script>
    function toggleApprovalButtons(tournamentId, userId, approve) {
        // Get the participation buttons container for the specific tournament
        const participationButtons = document.getElementById('participationButtonsApprove-' + tournamentId);

        if (approve) {
            var url = `/Participation/ApproveParticipation?tournamentId=${tournamentId}&userId=${userId}&returnUrl=%2FParticipation%2FTournamentParticipations%2F${tournamentId}`;

            participationButtons.innerHTML =
                `<button class="btn btn-danger text-white w-100 btn-sm" id="disapproveBtn-${tournamentId}" onclick="confirmApproval(${tournamentId}, \'${userId}\', false)">
                                Не
                            </button>
                            <a href="${url}" class="btn btn-success text-white w-100 btn-sm" id="approveBtn-${tournamentId}">
                                Да
                                </a>`
                ;
        } else {
            var url = `/Participation/DeleteParticipation?tournamentId=${tournamentId}&userId=${userId}&returnUrl=%2FParticipation%2FTournamentParticipations%2F${tournamentId}`;

            participationButtons.innerHTML =
                `<a href="${url}" class="btn btn-success text-white w-100 btn-sm" id="approveBtn-${tournamentId}">
                                Да
                            </a>
                                    <button class="btn btn-danger text-white w-100 btn-sm" id="disapproveBtn-${tournamentId}" onclick="confirmApproval(${tournamentId}, \'${userId}\', false)">
                                Не
                                </button>`
                ;
        }
    }

    function confirmApproval(tournamentId, userId, approve) {
        // Get the participation buttons container for the specific tournament
        const participationButtons = document.getElementById('participationButtonsApprove-' + tournamentId);
        participationButtons.innerHTML =
            `<a class="btn btn-success text-white w-100 btn-sm" id="approveBtn-${tournamentId}" onclick="toggleApprovalButtons(${tournamentId}, \'${userId}\', true)">
                                                Одобри
                                            </a>
                                                    <a class="btn btn-danger text-white w-100 btn-sm" id="disapproveBtn-${tournamentId}" onclick="toggleApprovalButtons(${tournamentId},\'${userId}\', false)">
                                                Не одобри
                                                </a>`
            ;
    }
    
    // Function to replace the "Отказване" button with confirmation buttons
    function replaceWithConfirmation(tournamentId, userId, isApproved) {
        var participationButtons = document.getElementById("participationButtons-" + tournamentId); // Unique ID for each tournament

        var url = `/Participation/DeleteParticipation?tournamentId=${tournamentId}&userId=${userId}&returnUrl=%2FParticipation%2FTournamentParticipations%2F${tournamentId}`;

        // Replace the content of the participationButtons with Yes and No options
        participationButtons.innerHTML = `
                            <a href="${url}" class="btn btn-danger w-50 btn-sm">Да</a>
                                    <a href="javascript:void(0);" class="btn btn-success w-50 btn-sm" onclick="restoreQuitButton(${tournamentId},\'${userId}\', ${isApproved})">Не</a>
                `;
    }

    // Function to replace the "Отказване" button with confirmation buttons
    function replaceWithConfirmationUser(tournamentId, userId, isApproved) {
        var participationButtons = document.getElementById("participationButtonsApprove-" + tournamentId); // Unique ID for each tournament

        var url = `/Participation/DeleteParticipation?tournamentId=${tournamentId}&userId=${userId}&returnUrl=%2FParticipation%2FTournamentParticipations%2F${tournamentId}`;

        // Replace the content of the participationButtons with Yes and No options
        participationButtons.innerHTML = `
                        <a href="${url}" class="btn btn-danger w-50 btn-sm">Да</a>
                                <a href="javascript:void(0);" class="btn btn-success w-50 btn-sm" onclick="restoreQuitButtonUser(${tournamentId},\'${userId}\', ${isApproved})">Не</a>
                    `;
    }
    
    // Function to restore the "Отказване" button and revert back to the original state
    function restoreQuitButton(tournamentId, userId, isApproved) {
        var participationButtons = document.getElementById("participationButtons-" + tournamentId); // Unique ID for each tournament

        // Restore the appropriate buttons based on the approval status
        if (isApproved) {
            participationButtons.innerHTML = `
                                        <a class="btn btn-success w-50" onmousedown="return false;" onkeydown="return false;">Одобрен</a>
                                                <a id="quitParticipation-${userId}" class="btn btn-danger text-ccenter w-50" onclick="replaceWithConfirmation(${tournamentId}, \'${userId}\',  ${isApproved})">Отказване</a>
                    `;
        } else {
            participationButtons.innerHTML = `
                                        <a class="btn btn-secondary w-50" onmousedown="return false;" onkeydown="return false;">Неодобрен</a>
                                        <a id="quitParticipation-${userId}" class="btn btn-danger text-center w-50" onclick="replaceWithConfirmation(@tournament.Id, '@currUser', false)">Отказване</a>
                    `;
        }
    }

    // Function to restore the "Отказване" button and revert back to the original state
    function restoreQuitButtonUser(tournamentId, userId, isApproved) {
        var participationButtons = document.getElementById("participationButtonsApprove-" + tournamentId); // Unique ID for each tournament
        participationButtons.innerHTML = `
                                <button class="btn btn-success text-white w-50 btn-sm" onmousedown="return false;" onkeydown="return false;">Одобрен</button>
                                                <a id="quiterParticipation-${userId}" class="btn btn-danger w-50 btn-sm" onclick="replaceWithConfirmationUser(${tournamentId}, \'${userId}\', ${isApproved})">Отказване</a>
                            `;
    }
</script>

<style>
    /* Button styling */
    .btn-success {
        background-color: green;
        border-color: green;
        padding: 0.75rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

        .btn-success:hover {
            transform: translateY(-2px);
        }

    .no-card-body {
        border-radius: 8px;
        border: 1px solid #e9ecef;
        padding: 0.5rem;
        transition: all 0.3s ease;
        background-color: #8ee697 !important;
    }
    /* Button styling */
    .btn-primary {
        background-color: blue;
        border-color: blue;
        padding: 0.75rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
        }

    /* Button styling */
    .btn-warning {
        background-color: #AA7700;
        border-color: #AA7700;
        padding: 0.75rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

        .btn-warning:hover {
            transform: translateY(-2px);
        }


    /* Button styling */
    .btn-danger {
        background-color: red;
        border-color: red;
        padding: 0.75rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

        .btn-danger:hover {
            transform: translateY(-2px);
        }

    /* Button styling */
    .btn-secondary {
        background-color: grey;
        border-color: grey;
        padding: 0.75rem;
        font-weight: 600;
        letter-spacing: 0.5px;
        border-radius: 6px;
        transition: all 0.2s ease;
    }

        .btn-secondary:hover {
            transform: translateY(-2px);
        }

    .container {
        min-height: 78vh;
        padding-bottom: 0px !important;
        align-content: center;
        margin-top: 1rem;
        margin-bottom: 1rem;
    }

    main {
        justify-content: center !important;
    }

    .container {
        padding: 0;
    }

        .container main.pb-3 {
            align-content: center;
            padding-bottom: 0px !important;
        }

    .sticky-search {
        position: sticky;
        top: 90px; /* Adjust based on your header height */
        background-color: #8ee697 !important;
        z-index: 999;
        width: 1320px;
        padding: 0.5rem;
        border-radius: 8px;
    }

    /* Form controls styling */
    .search-control {
        font-size: 1rem;
        padding: 0.5rem 0.75rem;
        background-color: #dcf7de !important;
    }

    /* Button group styling */
    .btn-group {
        display: flex;
        justify-content: center;
        gap: 20px;
    }

    /* User card styling */
    .user-card {
        border-radius: 8px;
        border: 1px solid #e9ecef;
        padding: 0.5rem;
        margin-bottom: 1rem;
        transition: all 0.3s ease;
        background-color: #8ee697 !important;
    }

    .user-image {
        width: 50px;
        height: 50px;
        object-fit: cover;
    }


    /* Info sections styling */
    .info-section {
        padding: 0 15px;
        text-align: center;
    }

        .info-section strong {
            color: #000 !important; /* Black color */
            font-size: 1rem; /* Slightly larger font */
            font-weight: bolder !important; /* Bolder */
        }

        /* Improved contrast for username */
        .info-section small {
            font-weight: normal;
            color: #1f1f1f !important; /* Darker text color for better contrast */
        }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .sticky-search {
            width: 100%;
            top: 70px;
        }

            .search-control,
            .sticky-search select,
            .sticky-search input {
                width: 100% !important;
                margin-right: 0;
                margin-bottom: 0.5rem;
            }

            .sticky-search form {
                flex-direction: column;
                align-items: stretch;
            }

            .sticky-search .btn {
                width: 100%;
                margin-top: 0.5rem;
            }

        .user-card .d-flex {
            flex-direction: column;
        }

        .flex-shrink-0 {
            margin: 0 auto;
            margin-bottom: 1rem;
        }

        .info-section {
            width: 100%;
            text-align: center;
            margin-bottom: 0.5rem;
        }

        .btn-group {
            flex-wrap: wrap;
            gap: 10px;
        }
    }

    /* Additional responsive adjustments */
    @@Wmedia (max-width: 480px) {
        .container1 {
            padding: 0 10px;
        }

        .page-header {
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }

        .sticky-search {
            padding: 0.5rem;
        }

        .user-card {
            padding: 0.75rem;
        }

        .user-image {
            width: 60px;
            height: 60px;
        }

        .btn-group {
            flex-direction: column;
            gap: 0.5rem !important;
        }

        .btn-primary, .btn-success, .btn-warning, .btn-danger {
            font-size: 0.9rem !important;
            padding: 0.5rem 0.75rem;
        }

        .info-section strong {
            font-size: 0.9rem;
        }

        .info-section small {
            font-size: 0.85rem;
        }
    }

    @@media (max-width: 320px) {
        .container1 {
            padding: 0 5px;
        }

        .page-header {
            font-size: 1.25rem !important;
        }

        .sticky-search {
            padding: 0.25rem;
        }

        .user-card {
            padding: 0.5rem;
        }

        .user-image {
            width: 50px;
            height: 50px;
        }

        .btn-primary, .btn-success, .btn-warning, .btn-danger {
            padding: 0.25rem 0.5rem;
            font-size: 0.8rem !important;
        }

        .info-section strong {
            font-size: 0.8rem !important;
        }

        .info-section small {
            font-size: 0.75rem !important;
        }

        .search-control {
            font-size: 0.8rem;
            padding: 0.25rem 0.5rem;
        }
    }

    /* Height-based media queries */
    @@media (max-height: 600px) {
        .container {
            height: auto !important;
            min-height: auto !important;
            padding-top: 1rem;
            padding-bottom: 1rem;
        }

        main.pb-3 {
            min-height: auto;
        }

        .mb-2 {
            margin-bottom: 0.25rem !important;
        }

        .sticky-search {
            position: relative;
            top: 0;
        }
    }

    /* Tablet landscape adjustments */
    @@media (min-width: 768px) and (max-width: 1024px) and (orientation: landscape) {
        .container {
            height: 85vh !important;
        }

        .sticky-search {
            width: 100%;
        }

        .user-card {
            padding: 0.75rem;
        }

        .info-section {
            padding: 0 10px;
        }
    }

    /* High resolution screens */
    @@media (min-width: 1400px) {
        .sticky-search {
            max-width: 1320px;
            margin: 0 auto;
        }

        .container1 {
            max-width: 1320px;
            margin: 0 auto;
        }
    }

    /* Print styles */
    @@media print {
        .container {
            height: auto !important;
        }

        .btn-primary, .btn-success, .btn-warning, .btn-danger {
            background-color: #333 !important;
            border-color: #333 !important;
            color: white !important;
        }

        .user-image {
            border: 1px solid #000 !important;
        }

        .sticky-search {
            display: none !important;
        }

        .user-card {
            break-inside: avoid;
            page-break-inside: avoid;
            border: 1px solid #000 !important;
        }
    }

    /* Handle column stacking on mobile */
    @@media (max-width: 767px) {
        .d-flex.align-items-center {
            flex-direction: column;
            gap: 0.5rem;
        }

        .d-flex.justify-content-between.flex-wrap {
            flex-direction: column;
            text-align: center;
        }

        .info-section.text-start {
            text-align: center !important;
        }
    }
</style>

@if (Model.Users.Count == 0)
{
    <div class="container-fluid d-flex justify-content-center align-items-center" style="height: 78vh;">
        <div class="no-card-body">
            <h1 class="mb-3" style="font-size: 5rem;">Няма участници</h1>
            <div class="d-flex justify-content-center mt-3">
                <a href="@ViewBag.ReturnUrl" class="btn btn-secondary">Назад</a>
                @if (tournament.Deadline.AddSeconds(-tournament.Deadline.Second).AddMilliseconds(-tournament.Deadline.Millisecond).AddMicroseconds(-tournament.Deadline.Microsecond) >= DateTime.Now.AddSeconds(-DateTime.Now.Second).AddMilliseconds(-DateTime.Now.Millisecond).AddMicroseconds(-DateTime.Now.Microsecond))
                {
                    <a asp-controller="Participation" asp-action="AddParticipation" asp-route-id="@tournament.Id" asp-route-returnUrl="@Url.Action("TournamentParticipations", "Participation")" class="btn btn-success ms-2">
                        Участвай
                    </a>
                }
            </div>
        </div>
    </div>
}
else
{
    <div class="d-flex flex-column justify-content-center align-items-center">
        <div class="container1">
            <h2 class="delete-header text-center">Участници</h2>
            <div class="sticky-search">
                <form method="post" class="d-flex justify-content-center w-100 align-items-center flex-column">
                    <!-- First row for inputs -->
                    <div class="d-flex flex-wrap justify-content-center w-100 mb-2">
                        <input id="nameSearch" class="search-control form-control me-2" placeholder="Име" asp-for="@Model.UserName" style="width: 250px;" />
                        <input id="contactSearch" class="search-control form-control me-2" placeholder="Имейл/Телефон" asp-for="@Model.Email" style="width: 250px;" />
                        <select asp-for="@Model.Country" asp-items="@ViewBag.Countries" class="search-control form-select me-2" aria-required="true" style="width: 360px;">
                            <option value="" selected>Изберете държавa</option>
                        </select>
                        <select asp-for="BirthYear" class="search-control form-select me-2" aria-required="true" style="width: 270px;">
                            <option value="" selected>Изберете година на раждане</option>
                            @{
                                var currentYear = DateTime.Now.Year;
                                var startYear = currentYear - 120;
                                var endYear = currentYear - 13;

                                for (int year = startYear; year <= endYear; year++)
                                {
                                    <option value="@year">@year</option>
                                }
                            }
                        </select>

                        <select asp-for="@Model.Approved" class="search-control form-select" aria-required="true" style="font-size: 1rem; width: 140px;">
                            <option value="" selected>Всички</option>
                            <option value="true">Одобрени</option>
                            <option value="false">Неодобрени</option>
                        </select>
                    </div>

                    <!-- Second row for buttons -->
                    <div class="d-flex justify-content-around w-100">
                        <a href="@ViewBag.ReturnUrl" class="btn btn-secondary" style="font-size: 1rem;">Назад</a>
                        @if (tournament.Deadline.AddSeconds(-tournament.Deadline.Second).AddMilliseconds(-tournament.Deadline.Millisecond).AddMicroseconds(-tournament.Deadline.Microsecond) >= DateTime.Now.AddSeconds(-DateTime.Now.Second).AddMilliseconds(-DateTime.Now.Millisecond).AddMicroseconds(-DateTime.Now.Microsecond))
                        {
                            <div id="participationButtons-@tournament.Id" class="d-flex justify-content-between align-items-center text-center" style="width: 232.167px;">
                                @{
                                    var participation = tournament.Participations?.FirstOrDefault(p => p.ParticipantId == ViewBag.UserId);
                                }

                                @if (participation == null)
                                {
                                    <a asp-controller="Participation" asp-action="AddParticipation" asp-route-id="@tournament.Id" asp-route-returnUrl="@Url.Action("TournamentParticipations", "Participation")" class="btn btn-success text-center w-100">
                                        Участвай
                                    </a>
                                }
                                else if (participation.Approved == false)
                                {
                                    <a class="btn btn-secondary w-50" onmousedown="return false;" onkeydown="return false;">Неодобрен</a>
                                    <a id="quitParticipation-${userId}" class="btn btn-danger text-center w-50" onclick="replaceWithConfirmation(@tournament.Id, '@currUser', false)">Отказване</a>
                                }
                                else
                                {
                                    <a class="btn btn-success w-50" onmousedown="return false;" onkeydown="return false;">Одобрен</a>
                                    <a id="quitParticipation-${userId}" class="btn btn-danger text-center w-50" onclick="replaceWithConfirmation(@tournament.Id, '@currUser', true)">Отказване</a>
                                }
                            </div>
                        }
                        <button type="submit" class="btn btn-primary px-4">
                            <i class="bi bi-search me-1"></i> Търси
                        </button>
                    </div>
                </form>
            </div>

            <div class="row justify-content-center mt-2 mb-4" style="margin-left:0; margin-right:0;">
                @foreach (var user in Model.FilteredUsers)
                {
                    <div class="user-card">
                        <!-- User Info Section with separate image div -->
                        <div class="d-flex align-items-center justify-content-between w-100 flex-wrap">
                            <!-- Separate div for the image -->
                            <div class="flex-shrink-0 mb-2 text-center" style="width: 70px;">
                                <img src="@user.ImageUrl" alt="Профилна снимка" class="user-image">
                            </div>

                            <!-- Text content container -->
                            <div class="d-flex flex-grow-1 justify-content-between flex-wrap">
                                <!-- User name and phone - explicitly left aligned -->
                                <div class="info-section text-start">
                                    <strong class="mb-0 d-block">@user.FullName</strong>
                                    <small>@user.UserName</small>
                                </div>

                                <!-- Country info - unchanged alignment -->
                                <div class="info-section">
                                    <strong class="d-block">Държава</strong>
                                    <small>@user.Country</small>
                                </div>

                                <!-- Email info - unchanged alignment -->
                                <div class="info-section">
                                    <strong class="d-block">Имейл</strong>
                                    <small>@user.Email</small>
                                </div>

                                @{
                                    int age = DateTime.Now.Year - user.DateOfBirth.Year;
                                    if (DateTime.Now.Month < user.DateOfBirth.Month ||
                                    (DateTime.Now.Month == user.DateOfBirth.Month && DateTime.Now.Day < user.DateOfBirth.Day))
                                    {
                                        age--;
                                    }
                                }

                                <!-- Birth date info - unchanged alignment -->
                                <div class="info-section">
                                    <strong class="d-block">Дата на раждане</strong>
                                    <small>
                                        @user.DateOfBirth.ToString("dd.MM.yyyy") (@age години)
                                    </small>
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="btn-group mt-1">
                            @if (!User.IsInRole(SD.AdminRole))
                            {
                                <div class="d-flex justify-content-around w-100">
                                    <a style="width:20%;" asp-controller="Participation" asp-action="UserParticipations" asp-route-id="@user.Id" asp-route-tournamentId="@tournament.Id" asp-route-tournamentUrl="/Participation/TournamentParticipations/@tournament.Id" class="btn btn-primary btn-sm">Участия</a>
                                    <a style="width:20%;" asp-controller="Tournament" asp-action="UserTournaments" asp-route-id="@user.Id" asp-route-tournamentId="@tournament.Id" asp-route-tournamentUrl="/Participation/TournamentParticipations/@tournament.Id" class="btn btn-success btn-sm">Турнири</a>
                                </div>
                            }
                            else
                            {
                                <div class="d-flex justify-content-between w-100">
                                    <a style="width:20%;" asp-controller="Participation" asp-action="UserParticipations" asp-route-id="@user.Id" asp-route-tournamentId="@tournament.Id" asp-route-tournamentUrl="/Participation/TournamentParticipations/@tournament.Id" class="btn btn-primary btn-sm">Участия</a>
                                    <a style="width:20%;" asp-controller="Tournament" asp-action="UserTournaments" asp-route-id="@user.Id" asp-route-tournamentId="@tournament.Id" asp-route-tournamentUrl="/Participation/TournamentParticipations/@tournament.Id" class="btn btn-success btn-sm">Турнири</a>
                                    @{
                                        var userParticipation = tournament.Participations?.FirstOrDefault(p => p.ParticipantId == user.Id);

                                        if (userParticipation != null)
                                        {
                                            if (!userParticipation.Approved)
                                            {
                                                <div style="width:20%;" class="d-flex" id="participationButtonsApprove-@tournament.Id">
                                                    <a class="btn btn-success text-white btn-sm flex-fill" id="approveBtn-@tournament.Id" onclick="toggleApprovalButtons(@tournament.Id, '@user.Id', true)">Одобри</a>
                                                    <a class="btn btn-danger text-white btn-sm flex-fill" id="disapproveBtn-@tournament.Id" onclick="toggleApprovalButtons(@tournament.Id, '@user.Id', false)">Не одобри</a>
                                                </div>
                                            }
                                            else
                                            {
                                                <div style="width:20%;" class="d-flex" id="participationButtonsApprove-@tournament.Id">
                                                    <button class="btn btn-success text-white btn-sm flex-fill" onmousedown="return false;" onkeydown="return false;">Одобрен</button>
                                                    <a id="quiterParticipation-@user.Id" class="btn btn-danger btn-sm flex-fill" onclick="replaceWithConfirmationUser(@tournament.Id, '@user.Id', true)">Отказване</a>
                                                </div>
                                            }
                                        }
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
}